x-airflow-env: &airflow-env
  AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
  AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"

services:
  postgres:
    image: postgres:15-alpine
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *airflow-env
    entrypoint: /bin/bash
    command: -lc "airflow db init && airflow users create --role Admin --username admin --password admin --firstname Bita --lastname A --email admin@example.com || true"
    volumes:
      - ../Airflow/dags:/opt/airflow/dags
      - ../Airflow/plugins:/opt/airflow/plugins
      - ../Airflow/logs:/opt/airflow/logs
    restart: "no"

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      <<: *airflow-env
    command: ["airflow", "webserver"]
    ports:
      - "8080:8080"
    volumes:
      - ../Airflow/dags:/opt/airflow/dags
      - ../Airflow/plugins:/opt/airflow/plugins
      - ../Airflow/logs:/opt/airflow/logs
    restart: unless-stopped

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      <<: *airflow-env
    command: ["airflow", "scheduler"]
    volumes:
      - ../Airflow/dags:/opt/airflow/dags
      - ../Airflow/plugins:/opt/airflow/plugins
      - ../Airflow/logs:/opt/airflow/logs
    restart: unless-stopped

  mssql:
    platform: linux/amd64
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: cs-sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "StrongPassw0rd!"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'StrongPassw0rd!' -Q 'SELECT 1' || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  airflow_db_data:
  mssql_data:
